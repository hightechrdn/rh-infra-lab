---
# tasks file for deploy-lab-ec2-instance
- name: Launch EC2 instance
  ec2:
     key_name: "{{ my_keyname }}"
     group: "{{ security_group }}"
     instance_type: "{{ instance_type }}"
     image: "{{ image }}"
     count: "{{ count }}"
     wait: true
     region: "{{ region }}"
     instance_tags:
       Name: "{{ uuid }}-{{ system_type }}"
       project: "{{ project }}"
       labenv: "{{ uuid }}"
     vpc_subnet_id: "{{ vpc_subnet_id }}"
     assign_public_ip: no
  register: ec2

- name: Add new instance to host group
  add_host:
    hostname: "{{ item.private_ip }}"
    groupname: "{{ system_type | regex_replace ('-','_') }}_launched"
    uuid: "{{ uuid }}"
  loop: "{{ ec2.instances }}"

- name: Wait for SSH to come up
  delegate_to: "{{ item.private_dns_name }}"
  wait_for_connection:
    delay: 60
    timeout: 320
  loop: "{{ ec2.instances }}"

- name: Set hostname on new host
  delegate_to: "{{ item.private_dns_name }}"
  become: True
  command: "hostnamectl set-hostname {{ hostname }}"
  loop: "{{ ec2.instances }}"

- name: Update /etc/hosts on new host
  delegate_to: "{{ item.private_dns_name }}"
  become: True
  lineinfile: 
    path: "/etc/hosts"
    regexp: "{{ item.private_ip }}"
    line: "{{ item.private_ip }} {{ hostname }}"
  loop: "{{ ec2.instances }}"

- name: Update lab environment information file
  lineinfile: 
    path: "/tmp/{{ uuid }}-lab-environment.txt"
    regexp: "{{ item.private_ip }}"
    line: "{{ purpose }} (instance #{{ item.ami_launch_index }}): {{ item.private_ip }}"
    create: yes
  loop: "{{ ec2.instances }}"
